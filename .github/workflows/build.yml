name: SonarCloud
on:
  push:
    branches:
      - devJEE
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis*
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ibrahim-ibnmohamed_REverso_JEE
      - name: Crée le répertoire
        run: mkdir -p artifacts
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
           name: package.war
           path: target/*.war
      - name: telechargement
        uses: actions/download-artifact@v4
        with:
           name: package.war
  docker:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs:
      - build
    steps:

      - uses: actions/checkout@v4


      - name: setup
        uses: docker/setup-qemu-action@v3


      - name: setup build
        uses: docker/setup-buildx-action@v3

        # Log in to Docker Hub

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASSWORD}}


      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: package.war

        # Build Docker image

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infra/tomcat/Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USER}}/reverso-web:latest


      - run: echo " voici l'etat du job ${{ job.status }}"

  backend-test:
    runs-on: ubuntu-latest
    services:
      mysql:
      image: mysql:8.2.12
      ports:
        - 3306:3306
      env:
        MYSQL_ROOT_PASSWORD:
      options: .