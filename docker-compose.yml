version: "3.9"
services:
  app-maven:
    container_name: app-maven
    image: maven:3.8.3-jdk-11
    volumes:
      - ./app:/app
      - maven_repo:/root/.m2/repository
      - ./infra/maven/settings.xml:/root/.m2/settings.xml
      - ./infra/logs/maven:/logs
    working_dir: /app
    depends_on:
      - app-tomcat
    command: [ "sh", "-c", "mvn clean package && cp /app/target/*.war /app/deploy/" ]
      # La commande Maven et la copie du .war sont maintenant combin√©es en une seule commande shell
    networks:
      - app

  app-tomcat:
    container_name: app-tomcat
    restart: 'always'
    build:
      context: ./infra/tomcat
    #image: tomcat:10
    env_file:
      - "./.env"
    depends_on:
      - app-mysql
    ports:
      - "8080:8080"
    volumes:
      - ./app/deploy:/usr/local/tomcat/webapps
      - ./infra/tomcat/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml
      - ./infra/tomcat/server.xml:/usr/local/tomcat/conf/server.xml
      - ./infra/logs/tomcat:/usr/local/tomcat/logs
    # command: ["catalina.sh", "run"]
    networks:
      - app

  app-mysql:
    container_name: app-mysql
    restart: 'always'
    build:
      context: ./infra/mysql
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
      - ${LOG_DIR_MYSQL}:/var/log/mysql
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/my.cnf
      - ${MYSQL_DUMP_DIR}:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MY_DATABASE}
    ports:
      - "8036:3306"
    networks:
      - app

#Docker Networks
networks:
  app:
    driver: bridge

volumes:
  maven_repo: